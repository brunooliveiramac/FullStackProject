<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<context:annotation-config />

	<!--
		DATABASE SETUP 
	 -->
	
	<bean id="multipartResolver"
			class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
			<property name="maxUploadSize" value="5000000"/>
	
	</bean>


	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="username" value="root" />
		<property name="password" value="" />
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost/testejpatreeview" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="examplePU" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="true" />
				<property name="showSql" value="true" />
			</bean>
		</property> 
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<!-- Beans com injeção pelo Spring -->

	<bean id="relatorios" class="br.com.guarani.rta.validador.TesteFile">
	</bean> 
	
	<bean id="userDao" class="br.com.guarani.rta.dao.usuario.JpaUserDao">
	</bean> 

	<bean id="projetoDao" class="br.com.guarani.rta.dao.projeto.ProjetoDAOimpl">
	</bean>
	  
	<bean id="tabelaDao" class="br.com.guarani.rta.dao.tabela.TabelaDAOimpl">
	</bean>
	 
	<bean id="layoutDao" class="br.com.guarani.rta.dao.layout.LayoutDAOimpl">
	</bean>
	
	<bean id="projeto" class="br.com.guarani.rta.entidade.Projeto">
	</bean>
	 
	<bean id="tabela" class="br.com.guarani.rta.entidade.Tabela">
	</bean>
	
	<bean id="layout" class="br.com.guarani.rta.entidade.Layout">
	</bean>
	
	<bean id="campo" class="br.com.guarani.rta.entidade.Campo">
	</bean>
	
	<bean id="atributo" class="br.com.guarani.rta.entidade.Atributo">
	</bean>
	
	<bean id="relatorioerros" class="br.com.guarani.rta.entidade.RelatorioErros">
	</bean>
	
	<bean id="tabelaErros" class="br.com.guarani.rta.entidade.TabelasErros">
	</bean>
	
	<bean id="user_projeto" class="br.com.guarani.rta.entidade.UserProjeto">
	</bean>
	
	<bean id="campoDao" class="br.com.guarani.rta.dao.campo.CampoDAOimpl">
	</bean>
	 
	   
	
	
	<bean id="dataBaseInitializer" class="br.com.guarani.rta.dao.DataBaseInitializer" init-method="initDataBase">
		<constructor-arg ref="userDao" />
		<constructor-arg ref="passwordEncoder" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<!--
		INIT REST COMPONENTS 
	 -->
	
	<context:component-scan base-package="br.com.guarani.rta.rest.resources" />
	
	<bean id="objectMapper" class="org.codehaus.jackson.map.ObjectMapper" />
	
	<!-- 
		SPRING SECURITY SETUP
	-->
	
	<bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder">
		<constructor-arg value="ThisIsASecretSoChangeMe" />
	</bean>
	
	<security:authentication-manager id="authenticationManager">
		<security:authentication-provider user-service-ref="userDao">
			<security:password-encoder ref="passwordEncoder"></security:password-encoder>
		</security:authentication-provider>
	</security:authentication-manager>



	<!-- DigestAuthenticationEntryPoint e DigestAuthenticationFilter -->
	
	<security:http
			realm="Protected API"
			use-expressions="true"
			auto-config="false"
			create-session="stateless" 
			entry-point-ref="unauthorizedEntryPoint"
			authentication-manager-ref="authenticationManager">
		<security:custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER" /> <!-- Servlet customizada -->
		<security:intercept-url pattern="/rest/user/authenticate" access="permitAll" /> <!-- Intercepta URL e Tipos de Métodos que elas acessam -->
		
		<security:intercept-url method="POST" pattern="/rest/relatorios/**" access="hasRole('admin')" />
			
		<security:intercept-url method="POST" pattern="/rest/relatorios/upload/**" access="hasRole('admin')" />
		
		
		<security:intercept-url method="GET" pattern="/rest/projetos/**" access="hasRole('user')" />
		<security:intercept-url method="PUT" pattern="/rest/projetos/**" access="hasRole('admin')" />
		<security:intercept-url method="POST" pattern="/rest/projetos/**" access="hasRole('admin')" />
		<security:intercept-url method="DELETE" pattern="/rest/projetos/**" access="hasRole('admin')" />
	</security:http>

	<bean id="unauthorizedEntryPoint" class="br.com.guarani.rta.rest.UnauthorizedEntryPoint" />

	<bean class="br.com.guarani.rta.rest.AuthenticationTokenProcessingFilter" id="authenticationTokenProcessingFilter">
		<constructor-arg ref="userDao" />
	</bean>

</beans>